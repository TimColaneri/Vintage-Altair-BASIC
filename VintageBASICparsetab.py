
# VintageBASICparsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftORleftANDleftNOTleftEQINEQLTLEGTGEleftPLUSMINUSleftMULTDIVIDErightEXPPleftUMINUSABS AND ASC ATN CHR COS DATA DEF DIM DIVIDE END EQ EXP EXPP FN FOR GE GOSUB GOTO GT ID IF INEQ INPUT INT INTEGER LE LEFT LEN LET LOG LT MID MINUS MULT NEXT NOT NUMBER ON OR PLUS PRINT READ REAL REM RESTORE RETURN RIGHT RND SGN SIN SPC SQR STEP STOP STR STRING TAN THEN TO VAL\n    program : sentence_list\n    \n    sentence_list : INTEGER stmts sentence_list\n                  | INTEGER stmts\n    \n    stmts : stmt ':' stmts\n          | stmt\n    \n    loop_sentence_list : INTEGER stmts loop_sentence_list\n                       | INTEGER NEXT opt_var\n    \n    loop_statements : stmt ':' loop_statements\n                    | stmt ':'\n    \n     stmt  : FOR ID '=' expr TO expr opt_step loop_sentence_list\n           | FOR ID '=' expr TO expr opt_step ':' loop_statements NEXT opt_var\n    \n    stmt : DEF FN ID '(' opt_formal_args ')' '=' expr\n    \n    stmt : REM text\n    \n    text : ID text\n         | empty\n    \n    opt_actual_args : actual_args\n                    | empty\n    \n    actual_args : expr ',' actual_args\n                | expr\n    \n    expr : ID '(' opt_actual_args ')'\n    \n    opt_formal_args : formal_args\n                    | empty\n    \n    formal_args : ID ',' formal_args\n                | ID\n    \n    expr : expr PLUS expr\n         | expr MINUS expr\n         | expr MULT expr\n         | expr DIVIDE expr\n         | expr EQ expr\n         | expr EXPP expr\n         | expr LE expr\n         | expr LT expr\n         | expr GT expr\n         | expr GE expr\n         | expr INEQ expr\n         | expr AND expr\n         | expr OR expr\n    \n    expr : MINUS expr %prec UMINUS\n    \n    expr : ABS '(' expr ')'\n    \n    expr : ASC '(' STRING ')'\n         | ASC '(' storable ')'\n    \n    expr : ATN '(' expr ')'\n    \n    expr : CHR '(' expr ')'\n    \n    expr : COS '(' expr ')'\n    \n    expr : EXP '(' expr ')'\n    \n    expr : INT '(' expr ')'\n    \n    expr : LEFT '(' STRING ',' INTEGER ')'\n         | LEFT '(' storable ',' INTEGER ')'\n    \n    expr : LEN '(' STRING ')'\n         | LEN '(' storable ')'\n    \n    expr : LOG '(' expr ')'\n    \n    expr : MID '(' STRING ',' expr ')'\n         | MID '(' storable ',' expr ')'\n         | MID '(' STRING ',' expr ',' expr ')'\n         | MID '(' storable ',' expr ',' expr ')'\n    \n    expr : RIGHT '(' STRING ',' expr ')'\n         | RIGHT '(' storable ',' expr ')'\n    \n    expr : RND '(' expr ')'\n    \n    expr : SGN '(' expr ')'\n    \n    expr : SIN '(' expr ')'\n    \n    expr : SPC '(' expr ')'\n    \n    expr : SQR '(' expr ')'\n    \n    expr : STR '(' expr ')'\n    \n    expr : TAN '(' expr ')'\n    \n    expr : VAL '(' STRING ')'\n         | VAL '(' storable ')'\n    \n    stmt : ON expr GOTO label_list\n         | ON expr GOSUB label_list\n    \n    label_list : INTEGER ',' label_list\n               | INTEGER\n    \n    stmt : INPUT opt_str ';' var_list\n    \n    stmt : RETURN\n    \n    stmt : DIM ID '(' int_list ')'\n    \n    int_list : INTEGER ',' int_list\n             | INTEGER\n             | empty\n    \n    stmt :  LET storable '=' expr\n         |  LET storable '=' STRING\n         |  storable '=' expr\n         |  storable '=' STRING\n    \n    stmt : IF expr THEN stmts\n         | IF expr THEN INTEGER\n    \n    stmt : GOTO INTEGER\n    \n    stmt : GOSUB INTEGER\n    \n    stmt : DATA val_list\n    \n    stmt : RESTORE \n    \n    stmt : READ var_list\n    \n    val_list : STRING ',' val_list\n             | INTEGER ',' val_list\n             | REAL ',' val_list\n             | REAL\n             | STRING\n             | INTEGER\n             | empty\n    \n    stmt : PRINT print_list\n    \n    stmt : END\n    \n    stmt : STOP\n    \n    expr : NOT expr\n    \n    opt_str : STRING\n            | empty\n    \n    opt_var : ID\n            | empty\n    \n    opt_step : STEP expr\n             | empty\n    \n    expr : INTEGER\n    \n    expr : REAL\n    \n    expr : storable\n    \n    storable : ID\n    \n    storable : ID '[' expr ']'\n    \n    expr : ID\n    \n    var_list    : storable ',' var_list\n                | storable\n    \n    empty :\n    \n    print_list : STRING ';' print_list\n               | STRING ',' print_list\n               | expr ';' print_list\n               | expr ',' print_list\n               | STRING\n               | expr\n    "
    
_lr_action_items = {'INTEGER':([0,4,5,7,9,10,11,12,14,18,19,20,22,23,24,28,30,31,32,34,35,38,45,58,59,60,61,67,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,110,113,114,115,116,117,118,119,121,123,124,125,126,127,128,129,130,132,133,134,135,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,185,189,190,191,192,193,194,195,196,197,198,199,200,201,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,240,249,250,251,253,254,255,256,257,258,259,260,261,262,265,266,271,272,273,274,275,277,278,279,280,281,],[3,3,-5,-108,-113,45,60,61,-72,45,71,-86,45,-96,-97,45,-13,-113,-15,-108,45,-107,-105,45,-106,-83,-84,45,-85,-92,-93,-91,-94,-87,-112,-95,-118,-119,-4,45,-14,140,140,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-38,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-98,187,45,-79,-80,192,71,71,71,45,45,45,45,-109,-67,-70,-68,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-71,-77,-78,-81,-82,-88,-89,-90,-111,-114,-115,-116,-117,45,140,-20,45,-39,-40,-41,-42,-43,-44,-45,-46,242,243,-49,-50,-51,45,45,45,45,-58,-59,-60,-61,-62,-63,-64,-65,-66,-73,187,-113,-69,264,45,-104,45,-47,-48,45,-52,45,-53,-56,-57,-10,-103,-12,264,-113,-54,-55,-113,-6,-7,-101,-102,-11,]),'$end':([1,2,4,5,7,9,14,19,20,23,24,25,30,31,32,34,38,45,59,60,61,69,70,71,72,73,74,75,76,77,78,79,83,100,121,125,126,128,129,130,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,185,189,190,191,192,193,194,195,196,197,198,199,200,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,235,240,254,255,257,259,260,261,262,266,272,273,274,275,277,278,279,280,281,],[0,-1,-3,-5,-108,-113,-72,-113,-86,-96,-97,-2,-13,-113,-15,-108,-107,-105,-106,-83,-84,-85,-92,-93,-91,-94,-87,-112,-95,-118,-119,-4,-14,-38,-98,-79,-80,-113,-113,-113,-109,-67,-70,-68,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-71,-77,-78,-81,-82,-88,-89,-90,-111,-114,-115,-116,-117,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-73,-69,-47,-48,-52,-53,-56,-57,-10,-12,-113,-54,-55,-113,-6,-7,-101,-102,-11,]),'FOR':([3,26,127,263,264,276,],[6,6,6,6,6,6,]),'DEF':([3,26,127,263,264,276,],[8,8,8,8,8,8,]),'REM':([3,26,127,263,264,276,],[9,9,9,9,9,9,]),'ON':([3,26,127,263,264,276,],[10,10,10,10,10,10,]),'INPUT':([3,26,127,263,264,276,],[13,13,13,13,13,13,]),'RETURN':([3,26,127,263,264,276,],[14,14,14,14,14,14,]),'DIM':([3,26,127,263,264,276,],[15,15,15,15,15,15,]),'LET':([3,26,127,263,264,276,],[16,16,16,16,16,16,]),'IF':([3,26,127,263,264,276,],[18,18,18,18,18,18,]),'GOTO':([3,26,33,34,38,45,59,100,121,127,137,142,143,144,145,146,147,148,149,150,151,152,153,154,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,254,255,257,259,260,261,263,264,273,274,276,],[11,11,84,-108,-107,-105,-106,-38,-98,11,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-47,-48,-52,-53,-56,-57,11,11,-54,-55,11,]),'GOSUB':([3,26,33,34,38,45,59,100,121,127,137,142,143,144,145,146,147,148,149,150,151,152,153,154,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,254,255,257,259,260,261,263,264,273,274,276,],[12,12,85,-108,-107,-105,-106,-38,-98,12,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-47,-48,-52,-53,-56,-57,12,12,-54,-55,12,]),'DATA':([3,26,127,263,264,276,],[19,19,19,19,19,19,]),'RESTORE':([3,26,127,263,264,276,],[20,20,20,20,20,20,]),'READ':([3,26,127,263,264,276,],[21,21,21,21,21,21,]),'PRINT':([3,26,127,263,264,276,],[22,22,22,22,22,22,]),'END':([3,26,127,263,264,276,],[23,23,23,23,23,23,]),'STOP':([3,26,127,263,264,276,],[24,24,24,24,24,24,]),'ID':([3,6,9,10,15,16,18,21,22,26,28,29,31,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,127,131,132,133,134,135,138,201,208,222,223,224,225,238,250,253,256,258,263,264,272,275,276,],[7,27,31,34,65,7,34,7,34,7,34,82,31,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,7,34,34,34,34,34,7,7,34,7,7,34,34,34,34,34,34,34,7,7,34,7,7,34,34,34,34,202,34,34,34,34,34,34,202,34,34,34,34,7,7,279,279,7,]),':':([5,7,9,14,19,20,23,24,30,31,32,34,38,45,59,60,61,69,70,71,72,73,74,75,76,77,78,79,83,100,121,125,126,128,129,130,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,185,189,190,191,192,193,194,195,196,197,198,199,200,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,235,237,240,249,251,254,255,257,259,260,261,262,265,266,270,272,273,274,275,277,278,279,280,281,],[26,-108,-113,-72,-113,-86,-96,-97,-13,-113,-15,-108,-107,-105,-106,-83,-84,-85,-92,-93,-91,-94,-87,-112,-95,-118,-119,-4,-14,-38,-98,-79,-80,-113,-113,-113,-109,-67,-70,-68,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-71,-77,-78,-81,-82,-88,-89,-90,-111,-114,-115,-116,-117,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-73,-113,-69,263,-104,-47,-48,-52,-53,-56,-57,-10,-103,-12,276,-113,-54,-55,-113,-6,-7,-101,-102,-11,]),'=':([7,17,27,66,137,239,],[-108,67,80,124,-109,253,]),',':([7,34,38,45,59,70,71,72,75,77,78,100,121,137,140,142,143,144,145,146,147,148,149,150,151,152,153,154,158,167,168,172,173,174,175,187,202,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,244,245,254,255,257,259,260,261,273,274,],[-108,-108,-107,-105,-106,128,129,130,131,133,135,-38,-98,-109,206,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,208,217,218,222,223,224,225,236,238,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,256,258,-47,-48,-52,-53,-56,-57,-54,-55,]),')':([7,34,38,45,59,99,100,121,123,137,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,176,177,178,179,180,181,182,183,184,186,187,188,202,203,204,205,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,236,241,242,243,244,245,246,247,248,252,254,255,257,259,260,261,267,268,273,274,],[-108,-108,-107,-105,-106,-113,-38,-98,-113,-109,-113,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,207,-16,-17,-19,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,235,-75,-76,-24,239,-21,-22,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-113,-18,254,255,257,259,260,261,-74,-23,-47,-48,-52,-53,-56,-57,273,274,-54,-55,]),'[':([7,34,],[28,28,]),'FN':([8,],[29,]),'MINUS':([10,18,22,28,33,34,35,38,45,58,59,67,68,78,80,81,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,110,113,114,115,116,117,118,119,121,124,125,132,133,134,135,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,201,207,208,209,210,211,212,213,214,215,216,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,237,244,245,246,247,250,253,254,255,256,257,258,259,260,261,265,266,267,268,273,274,],[35,35,35,35,87,-108,35,-107,-105,35,-106,35,87,87,35,87,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-38,35,35,35,35,35,35,35,35,35,35,35,35,35,35,87,35,87,35,35,35,35,87,-109,-25,-26,-27,-28,87,-30,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,35,-20,35,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,35,35,35,35,-58,-59,-60,-61,-62,-63,-64,-65,-66,87,87,87,87,87,35,35,-47,-48,35,-52,35,-53,-56,-57,87,87,87,87,-54,-55,]),'ABS':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'ASC':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ATN':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CHR':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'COS':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'EXP':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'INT':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'LEFT':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'LEN':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'LOG':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'MID':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'RIGHT':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'RND':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'SGN':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'SIN':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'SPC':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'SQR':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'STR':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'TAN':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'VAL':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'NOT':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'REAL':([10,18,19,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,128,129,130,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[59,59,72,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,72,72,72,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'STRING':([13,19,22,67,102,108,109,111,112,120,124,128,129,130,132,133,134,135,],[63,70,77,126,160,167,169,172,174,183,190,70,70,70,77,77,77,77,]),';':([13,34,38,45,59,62,63,64,77,78,100,121,137,142,143,144,145,146,147,148,149,150,151,152,153,154,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,254,255,257,259,260,261,273,274,],[-113,-108,-107,-105,-106,122,-99,-100,132,134,-38,-98,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-47,-48,-52,-53,-56,-57,-54,-55,]),'PLUS':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[86,-108,-107,-105,-106,86,86,86,-38,86,86,86,-109,-25,-26,-27,-28,86,-30,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,86,86,86,86,86,-47,-48,-52,-53,-56,-57,86,86,86,86,-54,-55,]),'MULT':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[88,-108,-107,-105,-106,88,88,88,-38,88,88,88,-109,88,88,-27,-28,88,-30,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,88,88,88,88,88,-47,-48,-52,-53,-56,-57,88,88,88,88,-54,-55,]),'DIVIDE':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[89,-108,-107,-105,-106,89,89,89,-38,89,89,89,-109,89,89,-27,-28,89,-30,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,89,89,89,89,89,-47,-48,-52,-53,-56,-57,89,89,89,89,-54,-55,]),'EQ':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[90,-108,-107,-105,-106,90,90,90,-38,90,90,90,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,90,90,90,90,90,-47,-48,-52,-53,-56,-57,90,90,90,90,-54,-55,]),'EXPP':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[91,-108,-107,-105,-106,91,91,91,-38,91,91,91,-109,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,91,91,91,91,91,-47,-48,-52,-53,-56,-57,91,91,91,91,-54,-55,]),'LE':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[92,-108,-107,-105,-106,92,92,92,-38,92,92,92,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,92,92,92,92,92,-47,-48,-52,-53,-56,-57,92,92,92,92,-54,-55,]),'LT':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[93,-108,-107,-105,-106,93,93,93,-38,93,93,93,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,93,93,93,93,93,-47,-48,-52,-53,-56,-57,93,93,93,93,-54,-55,]),'GT':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[94,-108,-107,-105,-106,94,94,94,-38,94,94,94,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,94,94,94,94,94,-47,-48,-52,-53,-56,-57,94,94,94,94,-54,-55,]),'GE':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[95,-108,-107,-105,-106,95,95,95,-38,95,95,95,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,95,95,95,95,95,-47,-48,-52,-53,-56,-57,95,95,95,95,-54,-55,]),'INEQ':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[96,-108,-107,-105,-106,96,96,96,-38,96,96,96,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,96,96,96,96,96,-47,-48,-52,-53,-56,-57,96,96,96,96,-54,-55,]),'AND':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[97,-108,-107,-105,-106,97,97,97,-38,-98,97,97,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,97,97,97,97,97,-47,-48,-52,-53,-56,-57,97,97,97,97,-54,-55,]),'OR':([33,34,38,45,59,68,78,81,100,121,125,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,244,245,246,247,254,255,257,259,260,261,265,266,267,268,273,274,],[98,-108,-107,-105,-106,98,98,98,-38,-98,98,98,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,98,98,98,98,98,-47,-48,-52,-53,-56,-57,98,98,98,98,-54,-55,]),'(':([34,36,37,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,65,82,],[99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,138,]),'THEN':([34,38,45,59,68,100,121,137,142,143,144,145,146,147,148,149,150,151,152,153,154,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,254,255,257,259,260,261,273,274,],[-108,-107,-105,-106,127,-38,-98,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-47,-48,-52,-53,-56,-57,-54,-55,]),']':([34,38,45,59,81,100,121,137,142,143,144,145,146,147,148,149,150,151,152,153,154,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,254,255,257,259,260,261,273,274,],[-108,-107,-105,-106,137,-38,-98,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-47,-48,-52,-53,-56,-57,-54,-55,]),'TO':([34,38,45,59,100,121,136,137,142,143,144,145,146,147,148,149,150,151,152,153,154,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,254,255,257,259,260,261,273,274,],[-108,-107,-105,-106,-38,-98,201,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,-47,-48,-52,-53,-56,-57,-54,-55,]),'STEP':([34,38,45,59,100,121,137,142,143,144,145,146,147,148,149,150,151,152,153,154,207,209,210,211,212,213,214,215,216,219,220,221,226,227,228,229,230,231,232,233,234,237,254,255,257,259,260,261,273,274,],[-108,-107,-105,-106,-38,-98,-109,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-20,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-58,-59,-60,-61,-62,-63,-64,-65,-66,250,-47,-48,-52,-53,-56,-57,-54,-55,]),'NEXT':([264,269,276,282,],[272,275,-9,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'sentence_list':([0,4,],[2,25,]),'stmts':([3,26,127,264,],[4,79,191,271,]),'stmt':([3,26,127,263,264,276,],[5,5,5,270,5,270,]),'storable':([3,10,16,18,21,22,26,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,127,131,132,133,134,135,201,208,222,223,224,225,250,253,256,258,263,264,276,],[17,38,66,38,75,38,17,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,161,38,38,38,38,38,168,170,38,173,175,38,38,38,38,38,38,38,184,75,38,17,75,38,38,38,38,38,38,38,38,38,38,38,38,38,38,17,17,17,]),'text':([9,31,],[30,83,]),'empty':([9,13,19,31,99,123,128,129,130,138,236,237,272,275,],[32,64,73,32,157,188,73,73,73,205,188,251,280,280,]),'expr':([10,18,22,28,35,58,67,80,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,110,113,114,115,116,117,118,119,124,132,133,134,135,201,208,222,223,224,225,250,253,256,258,],[33,68,78,81,100,121,125,136,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,162,163,164,165,166,171,176,177,178,179,180,181,182,189,78,78,78,78,237,158,244,245,246,247,265,266,267,268,]),'opt_str':([13,],[62,]),'val_list':([19,128,129,130,],[69,193,194,195,]),'var_list':([21,122,131,],[74,185,196,]),'print_list':([22,132,133,134,135,],[76,197,198,199,200,]),'label_list':([84,85,206,],[139,141,240,]),'opt_actual_args':([99,],[155,]),'actual_args':([99,208,],[156,241,]),'int_list':([123,236,],[186,248,]),'opt_formal_args':([138,],[203,]),'formal_args':([138,238,],[204,252,]),'opt_step':([237,],[249,]),'loop_sentence_list':([249,271,],[262,277,]),'loop_statements':([263,276,],[269,282,]),'opt_var':([272,275,],[278,281,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence_list','program',1,'p_prog','VintageBASIC_frontend_gram.py',23),
  ('sentence_list -> INTEGER stmts sentence_list','sentence_list',3,'p_sentence_list','VintageBASIC_frontend_gram.py',29),
  ('sentence_list -> INTEGER stmts','sentence_list',2,'p_sentence_list','VintageBASIC_frontend_gram.py',30),
  ('stmts -> stmt : stmts','stmts',3,'p_statements','VintageBASIC_frontend_gram.py',43),
  ('stmts -> stmt','stmts',1,'p_statements','VintageBASIC_frontend_gram.py',44),
  ('loop_sentence_list -> INTEGER stmts loop_sentence_list','loop_sentence_list',3,'p_loop_sentence_list','VintageBASIC_frontend_gram.py',53),
  ('loop_sentence_list -> INTEGER NEXT opt_var','loop_sentence_list',3,'p_loop_sentence_list','VintageBASIC_frontend_gram.py',54),
  ('loop_statements -> stmt : loop_statements','loop_statements',3,'p_loop_statements','VintageBASIC_frontend_gram.py',63),
  ('loop_statements -> stmt :','loop_statements',2,'p_loop_statements','VintageBASIC_frontend_gram.py',64),
  ('stmt -> FOR ID = expr TO expr opt_step loop_sentence_list','stmt',8,'p_for_stmt','VintageBASIC_frontend_gram.py',73),
  ('stmt -> FOR ID = expr TO expr opt_step : loop_statements NEXT opt_var','stmt',11,'p_for_stmt','VintageBASIC_frontend_gram.py',74),
  ('stmt -> DEF FN ID ( opt_formal_args ) = expr','stmt',8,'p_func_stmt','VintageBASIC_frontend_gram.py',83),
  ('stmt -> REM text','stmt',2,'p_rem_stmt','VintageBASIC_frontend_gram.py',89),
  ('text -> ID text','text',2,'p_text_exp','VintageBASIC_frontend_gram.py',95),
  ('text -> empty','text',1,'p_text_exp','VintageBASIC_frontend_gram.py',96),
  ('opt_actual_args -> actual_args','opt_actual_args',1,'p_opt_actual_args','VintageBASIC_frontend_gram.py',102),
  ('opt_actual_args -> empty','opt_actual_args',1,'p_opt_actual_args','VintageBASIC_frontend_gram.py',103),
  ('actual_args -> expr , actual_args','actual_args',3,'p_actual_args','VintageBASIC_frontend_gram.py',109),
  ('actual_args -> expr','actual_args',1,'p_actual_args','VintageBASIC_frontend_gram.py',110),
  ('expr -> ID ( opt_actual_args )','expr',4,'p_call_exp','VintageBASIC_frontend_gram.py',119),
  ('opt_formal_args -> formal_args','opt_formal_args',1,'p_opt_formal_args','VintageBASIC_frontend_gram.py',125),
  ('opt_formal_args -> empty','opt_formal_args',1,'p_opt_formal_args','VintageBASIC_frontend_gram.py',126),
  ('formal_args -> ID , formal_args','formal_args',3,'p_formal_args','VintageBASIC_frontend_gram.py',132),
  ('formal_args -> ID','formal_args',1,'p_formal_args','VintageBASIC_frontend_gram.py',133),
  ('expr -> expr PLUS expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',142),
  ('expr -> expr MINUS expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',143),
  ('expr -> expr MULT expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',144),
  ('expr -> expr DIVIDE expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',145),
  ('expr -> expr EQ expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',146),
  ('expr -> expr EXPP expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',147),
  ('expr -> expr LE expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',148),
  ('expr -> expr LT expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',149),
  ('expr -> expr GT expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',150),
  ('expr -> expr GE expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',151),
  ('expr -> expr INEQ expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',152),
  ('expr -> expr AND expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',153),
  ('expr -> expr OR expr','expr',3,'p_binop_exp','VintageBASIC_frontend_gram.py',154),
  ('expr -> MINUS expr','expr',2,'p_uminus_exp','VintageBASIC_frontend_gram.py',160),
  ('expr -> ABS ( expr )','expr',4,'p_abs_exp','VintageBASIC_frontend_gram.py',166),
  ('expr -> ASC ( STRING )','expr',4,'p_asc_exp','VintageBASIC_frontend_gram.py',172),
  ('expr -> ASC ( storable )','expr',4,'p_asc_exp','VintageBASIC_frontend_gram.py',173),
  ('expr -> ATN ( expr )','expr',4,'p_atn_exp','VintageBASIC_frontend_gram.py',179),
  ('expr -> CHR ( expr )','expr',4,'p_chr_exp','VintageBASIC_frontend_gram.py',185),
  ('expr -> COS ( expr )','expr',4,'p_cos_exp','VintageBASIC_frontend_gram.py',191),
  ('expr -> EXP ( expr )','expr',4,'p_e_exp','VintageBASIC_frontend_gram.py',197),
  ('expr -> INT ( expr )','expr',4,'p_int_exp','VintageBASIC_frontend_gram.py',203),
  ('expr -> LEFT ( STRING , INTEGER )','expr',6,'p_left_exp','VintageBASIC_frontend_gram.py',209),
  ('expr -> LEFT ( storable , INTEGER )','expr',6,'p_left_exp','VintageBASIC_frontend_gram.py',210),
  ('expr -> LEN ( STRING )','expr',4,'p_len_exp','VintageBASIC_frontend_gram.py',216),
  ('expr -> LEN ( storable )','expr',4,'p_len_exp','VintageBASIC_frontend_gram.py',217),
  ('expr -> LOG ( expr )','expr',4,'p_log_exp','VintageBASIC_frontend_gram.py',223),
  ('expr -> MID ( STRING , expr )','expr',6,'p_mid_exp','VintageBASIC_frontend_gram.py',229),
  ('expr -> MID ( storable , expr )','expr',6,'p_mid_exp','VintageBASIC_frontend_gram.py',230),
  ('expr -> MID ( STRING , expr , expr )','expr',8,'p_mid_exp','VintageBASIC_frontend_gram.py',231),
  ('expr -> MID ( storable , expr , expr )','expr',8,'p_mid_exp','VintageBASIC_frontend_gram.py',232),
  ('expr -> RIGHT ( STRING , expr )','expr',6,'p_right_exp','VintageBASIC_frontend_gram.py',241),
  ('expr -> RIGHT ( storable , expr )','expr',6,'p_right_exp','VintageBASIC_frontend_gram.py',242),
  ('expr -> RND ( expr )','expr',4,'p_rnd_exp','VintageBASIC_frontend_gram.py',248),
  ('expr -> SGN ( expr )','expr',4,'p_sgn_exp','VintageBASIC_frontend_gram.py',254),
  ('expr -> SIN ( expr )','expr',4,'p_sin_exp','VintageBASIC_frontend_gram.py',260),
  ('expr -> SPC ( expr )','expr',4,'p_spc_exp','VintageBASIC_frontend_gram.py',266),
  ('expr -> SQR ( expr )','expr',4,'p_sqr_exp','VintageBASIC_frontend_gram.py',272),
  ('expr -> STR ( expr )','expr',4,'p_str_exp','VintageBASIC_frontend_gram.py',278),
  ('expr -> TAN ( expr )','expr',4,'p_tan_exp','VintageBASIC_frontend_gram.py',284),
  ('expr -> VAL ( STRING )','expr',4,'p_val_exp','VintageBASIC_frontend_gram.py',290),
  ('expr -> VAL ( storable )','expr',4,'p_val_exp','VintageBASIC_frontend_gram.py',291),
  ('stmt -> ON expr GOTO label_list','stmt',4,'p_on_statement','VintageBASIC_frontend_gram.py',297),
  ('stmt -> ON expr GOSUB label_list','stmt',4,'p_on_statement','VintageBASIC_frontend_gram.py',298),
  ('label_list -> INTEGER , label_list','label_list',3,'p_label_list','VintageBASIC_frontend_gram.py',304),
  ('label_list -> INTEGER','label_list',1,'p_label_list','VintageBASIC_frontend_gram.py',305),
  ('stmt -> INPUT opt_str ; var_list','stmt',4,'p_input_statement','VintageBASIC_frontend_gram.py',314),
  ('stmt -> RETURN','stmt',1,'p_return_statement','VintageBASIC_frontend_gram.py',323),
  ('stmt -> DIM ID ( int_list )','stmt',5,'p_dim_statement','VintageBASIC_frontend_gram.py',329),
  ('int_list -> INTEGER , int_list','int_list',3,'p_int_list','VintageBASIC_frontend_gram.py',335),
  ('int_list -> INTEGER','int_list',1,'p_int_list','VintageBASIC_frontend_gram.py',336),
  ('int_list -> empty','int_list',1,'p_int_list','VintageBASIC_frontend_gram.py',337),
  ('stmt -> LET storable = expr','stmt',4,'p_let_statement','VintageBASIC_frontend_gram.py',346),
  ('stmt -> LET storable = STRING','stmt',4,'p_let_statement','VintageBASIC_frontend_gram.py',347),
  ('stmt -> storable = expr','stmt',3,'p_let_statement','VintageBASIC_frontend_gram.py',348),
  ('stmt -> storable = STRING','stmt',3,'p_let_statement','VintageBASIC_frontend_gram.py',349),
  ('stmt -> IF expr THEN stmts','stmt',4,'p_if_statement','VintageBASIC_frontend_gram.py',358),
  ('stmt -> IF expr THEN INTEGER','stmt',4,'p_if_statement','VintageBASIC_frontend_gram.py',359),
  ('stmt -> GOTO INTEGER','stmt',2,'p_goto_statement','VintageBASIC_frontend_gram.py',365),
  ('stmt -> GOSUB INTEGER','stmt',2,'p_gosub_statement','VintageBASIC_frontend_gram.py',371),
  ('stmt -> DATA val_list','stmt',2,'p_data_statement','VintageBASIC_frontend_gram.py',377),
  ('stmt -> RESTORE','stmt',1,'p_restore_statement','VintageBASIC_frontend_gram.py',383),
  ('stmt -> READ var_list','stmt',2,'p_read_statement','VintageBASIC_frontend_gram.py',392),
  ('val_list -> STRING , val_list','val_list',3,'p_val_list','VintageBASIC_frontend_gram.py',398),
  ('val_list -> INTEGER , val_list','val_list',3,'p_val_list','VintageBASIC_frontend_gram.py',399),
  ('val_list -> REAL , val_list','val_list',3,'p_val_list','VintageBASIC_frontend_gram.py',400),
  ('val_list -> REAL','val_list',1,'p_val_list','VintageBASIC_frontend_gram.py',401),
  ('val_list -> STRING','val_list',1,'p_val_list','VintageBASIC_frontend_gram.py',402),
  ('val_list -> INTEGER','val_list',1,'p_val_list','VintageBASIC_frontend_gram.py',403),
  ('val_list -> empty','val_list',1,'p_val_list','VintageBASIC_frontend_gram.py',404),
  ('stmt -> PRINT print_list','stmt',2,'p_print_statement','VintageBASIC_frontend_gram.py',413),
  ('stmt -> END','stmt',1,'p_end_statement','VintageBASIC_frontend_gram.py',419),
  ('stmt -> STOP','stmt',1,'p_stop_statement','VintageBASIC_frontend_gram.py',425),
  ('expr -> NOT expr','expr',2,'p_not_exp','VintageBASIC_frontend_gram.py',431),
  ('opt_str -> STRING','opt_str',1,'p_opt_string','VintageBASIC_frontend_gram.py',437),
  ('opt_str -> empty','opt_str',1,'p_opt_string','VintageBASIC_frontend_gram.py',438),
  ('opt_var -> ID','opt_var',1,'p_opt_var','VintageBASIC_frontend_gram.py',444),
  ('opt_var -> empty','opt_var',1,'p_opt_var','VintageBASIC_frontend_gram.py',445),
  ('opt_step -> STEP expr','opt_step',2,'p_opt_step','VintageBASIC_frontend_gram.py',451),
  ('opt_step -> empty','opt_step',1,'p_opt_step','VintageBASIC_frontend_gram.py',452),
  ('expr -> INTEGER','expr',1,'p_integer_exp','VintageBASIC_frontend_gram.py',461),
  ('expr -> REAL','expr',1,'p_real_exp','VintageBASIC_frontend_gram.py',467),
  ('expr -> storable','expr',1,'p_storable_exp','VintageBASIC_frontend_gram.py',473),
  ('storable -> ID','storable',1,'p_storable_1','VintageBASIC_frontend_gram.py',479),
  ('storable -> ID [ expr ]','storable',4,'p_storable_2','VintageBASIC_frontend_gram.py',485),
  ('expr -> ID','expr',1,'p_id_exp','VintageBASIC_frontend_gram.py',491),
  ('var_list -> storable , var_list','var_list',3,'p_varlist','VintageBASIC_frontend_gram.py',497),
  ('var_list -> storable','var_list',1,'p_varlist','VintageBASIC_frontend_gram.py',498),
  ('empty -> <empty>','empty',0,'p_empty','VintageBASIC_frontend_gram.py',507),
  ('print_list -> STRING ; print_list','print_list',3,'p_printlist','VintageBASIC_frontend_gram.py',513),
  ('print_list -> STRING , print_list','print_list',3,'p_printlist','VintageBASIC_frontend_gram.py',514),
  ('print_list -> expr ; print_list','print_list',3,'p_printlist','VintageBASIC_frontend_gram.py',515),
  ('print_list -> expr , print_list','print_list',3,'p_printlist','VintageBASIC_frontend_gram.py',516),
  ('print_list -> STRING','print_list',1,'p_printlist','VintageBASIC_frontend_gram.py',517),
  ('print_list -> expr','print_list',1,'p_printlist','VintageBASIC_frontend_gram.py',518),
]
